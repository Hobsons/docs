<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="how_startup_works_in_system_with_disk_stores">
	<title>How Startup and Shutdown Work with Disk Stores</title>
	<shortdesc>When you shut down a member that is persisting data, the data remains in the disk
		store files. When the member starts up again, the data is reloaded and reinitializes the
		member's persistent regions. </shortdesc>
	<conbody>
		<section id="section_E0D6B357C9CB4A089E433764DF91DD69">
			<title>Shutdown: Most Recent Data from the Last Run</title>
			<p> If more than one member has the same persistent region or queue, the last member to
				exit leaves the most up-to-date data on disk. </p>
			<p><keyword keyref="product_name"/> stores information on member exit order in the disk stores, so it can start
				your members with the most recent data set: <ul
					id="ul_276BAD535A864632929B47EDDC1F10E8">
					<li id="li_CAF8103858E04799B9F3586F0126B535">For a persistent replicate, the
						last member to exit leaves the most recent data on disk. </li>
					<li id="li_9856757221664D1AA1CC98A546597772">For a partitioned region, where the
						data is split into buckets: <ul id="ul_C6196840A5D5406C95D53B88F3B51CC2">
							<li id="li_9F8F0185E3FA426EAD8A7899E086E1B9">If you use gfsh
									<codeph>shutdown</codeph> command, all online data stores are
								synchronized before shutting down so all hold the most recent data
								copy. </li>
							<li id="li_A828BFE835A144088E32FBFA85AE3047">Otherwise, different
								members might host different most recent buckets. </li>
						</ul>
					</li>
				</ul>
			</p>
		</section>
		<section id="section_027A20F6E37046738619DDB6E7160100">
			<title>Startup Process</title>
			<p>When you start a member with disk stores, the stores are loaded back into the cache
				to initialize the member’s persistent regions. <ul
					id="ul_0387F10882C7485A9FFD6E30C022B423">
					<li id="li_EB80DC619E1946F69F62E9FE9FE4B70B">If any region does not hold all
						most recent data in the system: <ol id="ol_04C5247AC72D49F094449BB7234AAA85">
							<li id="li_8E8C39C1186649F390B48B4D71B32723"> Region creation is blocked, waiting for the
								members with the most recent data. <p>If your log level is info or
									below, the system provides messaging about the wait. Here, the
									disk store for hostA has the most recent data for the region and
									the hostB member is waiting for it.
									<codeblock>Region /people has potentially stale data. 
It is waiting for another member to recover the latest data.
My persistent id:

  DiskStore ID: 6893751ee74d4fbd-b4780d844e6d5ce7
  Name: server1
  Location: /10.118.32.49:/home/dsmith/server1/.

Members with potentially new data:
[
  DiskStore ID: 160d415538c44ab0-9f7d97bae0a2f8de
  Name: server2
  Location: /10.118.32.49:/home/dsmith/server2/.
]
Use the "gemfire list-missing-disk-stores" command to see all disk stores 
that are being waited on by other members.</codeblock>
								</p>
								<p>During normal startup, especially with partitioned regions that
									were not shut down using the <codeph>gfsh shutdown</codeph>
									command, you can expect to see some messages that indicate
									waiting. </p>
							</li>
							<li id="li_78F6326402CB44E381FE25BA9A84B010">When the most recent data
								is available, the system updates the local region as needed, logs a
								message like this, and continues with startup.
								<codeblock>[info 2010/04/09 10:52:13.010 PDT CacheRunner &lt;main&gt; tid=0x1]    
   Done waiting for the remote data to be available.</codeblock>
							</li>
						</ol>
					</li>
					<li id="li_D6D892401A6E4BACBAC9D5E465EC9D44">If the disk store has data for a
						region that is never created, the data remains in memory. </li>
				</ul>
			</p>
			<p>Each member’s persistent regions load and go online as quickly as possible, not
				waiting unnecessarily for other members to complete. For performance reasons,
				several actions occur asynchronously: <ul id="ul_BE1CE16EF26543AF9AE59780CFCF1430">
					<li id="li_AE423019CCF147BC832EA36480213104">If both primary <i>and</i>
						secondary buckets are persisted, data will be available when the primary
						buckets are loaded without waiting for the secondary buckets to load; the
						secondary buckets will load asynchronously. </li>
					<li id="li_A0EF8BB8DB604531B5E5AEECA63BA3FF"> Entry keys first get loaded from
						the key file if this file is available (see information about the krf file
						in <xref href="file_names_and_extensions.xml#file_names_and_extensions"
							type="concept" format="dita" scope="local"/>). Once
						all keys are loaded, <keyword keyref="product_name"/> loads the entry values asynchronously. If a
						value is requested before it is loaded, the value will immediately be
						fetched from the disk store. </li>
				</ul>
			</p>
		</section>
		<section id="section_5E32F488EB5D4E74AAB6BF394E4329D6">
			<title>Example Startup Scenarios</title>
			<p>The following lists scenarios for starting up a system with disk stores after a
				shutdown: <ul id="ul_7502260991C946B1804B009742795721">
					<li id="li_0D0DC656158747C3A557072D917CC518">Stop order for a replicate
						persistent region <ol id="ol_0D3AA260748A4D49A332C095D95582E6">
							<li id="li_C65DE84ED0F24A7D934D9AC3B5AF1A1C">Member A (MA) exits first,
								leaving persisted data on disk for RegionP. </li>
							<li id="li_FA6AFCC2F99B4F20BF8CAC8E974AC1E4">MB continues to run
								operations on RegionP, which update its disk store and leave the
								disk store for MA in a stale condition. </li>
							<li id="li_A6478B73D48343A78143A2D0E8DB67FF">MB exits, leaving the most
								up-to-date data on disk for RegionP. </li>
						</ol>
					</li>
					<li id="li_7EE18F6D39CF4D9184A194F274CDD268">Restart order Scenario 1 <ol
							id="ol_BEE64732FB554FFD89460953C6561347">
							<li id="li_4882EB3622CD43869A8E1BABC124C10C">MB is started first.
								<keyword keyref="product_name"/> recognizes MB as having the most recent disk data for
								RegionP and initializes it from disk. </li>
							<li id="li_9BDCF00287C84CD798DAFDFD8A797C33">MA is started, recovers its
								data from disk, and updates it as needed from the data in MB. </li>
						</ol>
					</li>
					<li id="li_F25155C9DCAB42539FB9755220037FD7">Restart order Scenario 2 <ol
							id="ol_7C728211D0794B89BF543AE83EF167D0">
							<li id="li_1A26837B310C42D6930EDC6C8F74D1FD">MA is started first.
								<keyword keyref="product_name"/> recognizes that MA does not have the most recent disk data
								and waits for MB to start before creating RegionP in MA. </li>
						<li id="li_2DD4785DA379443DB7946377CEACD653">MB is started. <keyword keyref="product_name"/>
								recognizes MB as having the most recent disk data for RegionP and
								initializes it from disk. </li>
							<li id="li_A490E0DBF3814C6ABC450D7445CE47AC">MA recovers its RegionP
								data from disk and updates it as needed from the data in MB. </li>
						</ol>
					</li>
				</ul>
			</p>
		</section>
	</conbody>
</concept>
